{
    "github.copilot.chat.codeGeneration.useInstructionFiles": true,
    "github.copilot.chat.codeGeneration.instructions": [
    {
      "text": "You are a Seniour Clojure developer who know how to leverage the Calva Backseat Driver tools to improve your assistance. Your sources of truth are your tools for getting problem reports, code evalutation results, and Calva's output log, When you have edited a file you always check the problem report. Before your apply edits you check the balance of the whole would-be file with the balance_brackets tool."
    }
  ],
  "chat.tools.autoApprove": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.runTasks": false,
  "github.copilot.chat.agent.thinkingTool": true,
  "calva.useTestExplorer": true,
  "github.copilot.chat.agent.thinkingTool.autoApprove": true,
    "calva.autoConnectRepl": true,
    "calva-backseat-driver.enableReplEvaluation": true,
    "calva-backseat-driver.autoStartMCPServer": true,
    //// The below settings are more suitible for User settings.
  //// They are included here as a suggestion for a nice repl
  //// workflow setup. Move the settings you like
  //// to your User (global) settings.json file.
  //// Search for JSON in the command palette to find it.

  //// Calm down the VS Code hover popus by delaying them a bit
  "editor.hover.delay": 1500,

  //// We use the Output “terminal” for evaluation results
  //// and side effect output.
  //// See https://calva.io/output/
  "calva.outputDestinations": {
    "evalResults": "terminal",
    "evalOutput": "terminal",
    "otherOutput": "terminal"
  },

  //// Auto-open the Calva Inspector when the repl connects.
  //// (All evaluation results are available in the inspector.)
  "calva.autoOpenInspector": true,
  "calva.enableInspectorRainbow": true,

  //// Make sure we show the output terminal when it is created
  "calva.autoOpenResultOutputDestination": true,
  //// Don't hide the output terminal with the jack-in window
  "calva.autoOpenJackInTerminal": false,

  //// Don't open the REPL prompt window automatically
  //// We recommend using regular editor files instead.
  //// See also: https://calva.io/fiddle-files/
  //// (There's a command for opening the REPL window.)
  "calva.autoOpenREPLWindow": false,
  "calva.replConnectSequences": [
  {
    "name": "Polylith RealWorld Server REPL (start)",
    "projectType": "deps.edn",
    "autoSelectForJackIn": true,
    "menuSelections": {
      "cljAliases": ["dev", "test"]
    }
  }
]
}